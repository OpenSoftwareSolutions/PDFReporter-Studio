<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
	xml:base="../" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">
<title>Creation of a Table</title>
<section>
      <para>The first thing to is create a new report, from Jaspersoft Studio select File-&gt;New-&gt;Jasper Report, call the new
      report &quot;TablesExample&quot; and as template use &quot;Cherry&quot;. As data adapter use &quot;Sample DB - Database JDBC
      connection&quot;, that came with Jaspersoft Studio and as SQL query to discover the fields use: &quot;select * from
      orders&quot;. Now you have a list of the discovered fields, add them to the report in this order: ORDERDATE, ORDERID,
      SHIPNAME, SHIPADDRESS and SHIPCITY. Don&#39;t use groups and complte the wizard. Now you have the report with some fields
      already placed in it. You can test if it is all right by compiling the report switching to the preview tab. If it all right
      you should see something like this:</para>
  		<figure>
			<title>Example Report</title>
			<screenshot>
				<mediaobject>
					<imageobject>
						<imagedata fileref="1.png" format="PNG" contentwidth="800px" />
					</imageobject>
				</mediaobject>
			</screenshot>
		</figure>
      <para>Now we can create our first table, the first decisions to take are what the table should display and where it is located.
      As location we can choose the summary, because it is printed at end of the report and could be used to view easily some
      aggregated data. For this example we choose to show in the table the number of shipment done in every year. If you don&#39;t
      see the summary band in your report it is probably because it has size zero, so select it from the outline view and change
      its height. The first thing to do is drag a table element from the palette to the summary band and a wizard dialog will
      appear. On the first step you can choose if the table use an existing dataset or if you want to create a new one, for our
      purpose choose to create a new one and hit &quot;Next&quot;.</para>
  		<figure>
			<title>Select the datasource type</title>
			<screenshot>
				<mediaobject>
					<imageobject>
						<imagedata fileref="2.png" format="PNG" contentwidth="800px" />
					</imageobject>
				</mediaobject>
			</screenshot>
		</figure>
      <para>On the next step, as name of the dataset choose &quot;TableDataset&quot;, select to create a new dataset from a connection
      or a database and hit &quot;Next&quot;.</para>
  		<figure>
			<title>Enter a Name for the New Dataset</title>
			<screenshot>
				<mediaobject>
					<imageobject>
						<imagedata fileref="3.png" format="PNG" contentwidth="800px" />
					</imageobject>
				</mediaobject>
			</screenshot>
		</figure>
      <para>Now you have to choose the data adapter, use the built in database &quot;Sample DB - Database JDBC Connection&quot; with
      the SQL query: &quot;select YEAR(SHIPPEDDATE),count(*) from orders group by YEAR(SHIPPEDDATE)&quot; This query select the
      year from the shipment date and the number of records grouped also by the shipdate year. Doing this we have the number of
      record and the year of the shipments done in that year. Then you can hit &quot;Next&quot; to see the discovered fields, here
      you can see two fields named &quot;C1&quot; and &quot;C2&quot;, add them to the fields of the new dataset using the button
      &quot;&gt;&gt;&quot; or by double clicking on each one. Then you can hit &quot;Next&quot; and, since we dosen&#39;t need
      groups, click another time &quot;Next&quot;. In the next step you can select the connection to the data source, here leave
      the default option (&quot;use the same connection used to fill the master report&quot;) and hit &quot;Next&quot;. At this
      point we can define the fields in the columns of the table, add them all and click &quot;Next&quot;. Finally we can choose
      how the table is composed, infact we have six types of speciall cells:</para>
       <itemizedlist mark='opencircle'>
        <listitem>Table Header and Table Footer: printed at the start and at the end of the table.</listitem>
        <listitem>Column Header and Column Footer: printed at start and at the end of the table on every column, under\above the table
        header and footer.</listitem>
        <listitem>Group Header and Group Footer: printed at start and at the end of every group, visibles only if the table is using
        groups</listitem>
      </itemizedlist>
      <para>For what we need leave enable only the Column Header and Column Footer and hit &quot;Finish&quot;.</para>
  		<figure>
			<title>Select the table layout</title>
			<screenshot>
				<mediaobject>
					<imageobject>
						<imagedata fileref="4.png" format="PNG" contentwidth="800px" />
					</imageobject>
				</mediaobject>
			</screenshot>
		</figure>
      <para>Now you have created the table, arrange the layout and change the label &quot;C1&quot; and &quot;C2&quot; to display
      &quot;Year&quot; and &quot;Number of Shipment&quot;. To change the value of these labels, or of any other table cell, you
      must go in the cell editor by double clicking on the table in the main report. Now you have a fully working table, but it can
      be enhanced doing this:</para>
       <itemizedlist mark='opencircle'>
        <listitem>Since the table has no column footer defined we can put here for example the total of the shipments;</listitem>
        <listitem>Some element has not a shipment date, and for this the value null is shown, we can change this with
        &quot;Undefined&quot;;</listitem>
        <listitem>The color of the column header and footer cells are very different from the ones of the main report.</listitem>
      </itemizedlist>
      <para>For the first point we need a support variable that sum all the values returned from the second field of the
      TableDataset query. First switch into the main report, expand the dataset &quot;TableDataset&quot;, rightclick on
      &quot;Variables&quot; and select &quot;Create Variable&quot;. A variable called &quot;variable_1&quot; will be created,
      select it from the outline and set its fields as follow:</para>
      <itemizedlist mark='opencircle'>
        <listitem>Value Class Name: set it to java.lang.Integer, since we need a numeric value;</listitem>
        <listitem>Calculation: set it to sum since we want to sum single values;</listitem>
        <listitem>Expression: use the value $F{C2}, since we want to sum every single value of the field C2;</listitem>
        <listitem>Initial value Expression: new Integer(0), since the sum start from zero.</listitem>
      </itemizedlist>
  		<figure>
			<title>Create a new variable</title>
			<screenshot>
				<mediaobject>
					<imageobject>
						<imagedata fileref="5.png" format="PNG" contentwidth="800px" />
					</imageobject>
				</mediaobject>
			</screenshot>
		</figure>
      <para>Now go in the table editor by double clicking on the table and put a static text from the palette into the left column
      footer cell and set its text to &quot;Total&quot;, then drag and drop the &quot;variable_1&quot; from the outline view into
      the right cell of the footer, and resize them to fit the cells. Now we need to change the value &quot;null&quot; with the
      string &quot;undefined&quot;, in the table editor select the element with the value &quot;$F{C1}&quot;, as you can see this
      is a text field inside the cell that as expression has only a field. Edit the expression of this field by double clicking on
      it and set its expression to: &quot;$F{C1} == null ? &quot;Undefined&quot; : $F{C1}&quot;. This is a simple IF expression in
      a compact form (condition ? case then : case else) that check if the field is null and in that case returns the value
      &quot;Undefined&quot;, otherwise the value of the field. After that the only thing to do is change the color of the cell:
      when a table is created in jaspersoft studio the color is not set on the cell, but are created more styles, for example we
      can find:</para>
      <itemizedlist mark='opencircle'>
        <listitem>Table_TH for the table header\footer cells</listitem>
        <listitem>Table_CH for the column header\footer cells</listitem>
        <listitem>Table_GH for the gourp header\footer cells</listitem>
      </itemizedlist>
      <para>And these styles are created for every table, to avoid the name clashes a progressive number is placed at the end of the
      name of the style until an unique name is found. So select the style &quot;Table_CH&quot; and from the properties change the
      background color to a light gray. The final result should be something like the following image:</para>
  		<figure>
			<title>Set the new value into the table</title>
			<screenshot>
				<mediaobject>
					<imageobject>
						<imagedata fileref="6.png" format="PNG" contentwidth="800px" />
					</imageobject>
				</mediaobject>
			</screenshot>
		</figure>
      <para>Now switch to the preview tab to see the result:</para>
  		<figure>
			<title>Report compiled</title>
			<screenshot>
				<mediaobject>
					<imageobject>
						<imagedata fileref="7.png" format="PNG" contentwidth="800px" />
					</imageobject>
				</mediaobject>
			</screenshot>
		</figure>
     	</section>
</section>