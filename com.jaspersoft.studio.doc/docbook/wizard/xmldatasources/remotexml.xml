<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
	xml:base="../" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">
<title>Creation of a Remote XML dataset</title>
<section>
      <para>Jaspersoft Studio provide also a data adapter for the remote XML, like the RSS Feed. This mean that is possibile generate
      a report using not only a local XML but a remote XML provided from some service. This time we will use as example the RSS
      Feed of the BBC News. Start the creation of a new report from File-&gt;New-&gt;Jasper Report and as template select
      &quot;Tree&quot; and as file name use &quot;BBCReport&quot;. Now you have to choose the data adapter, but since you
      doesn&#39;t have an adapter for the remote XML you have to click &quot;New&quot; and in the window that will appear select
      the option &quot;XML document (remote)&quot; and hit &quot;Next&quot;. Call the new data adapter &quot;BBCAdapter&quot; and
      use this values:</para>
      <itemizedlist mark='opencircle'>
        <listitem>XML URL: http://feeds.bbci.co.uk/news/rss.xml?edition=int#</listitem>
        <listitem>Date pattern: EEE, dd MMM yyyy HH:mm:ss z</listitem>
      </itemizedlist>
      <para>And hit &quot;Finish&quot;.</para>
        		<figure>
			<title>Remote XML Data Adapter</title>
			<screenshot>
				<mediaobject>
					<imageobject>
						<imagedata fileref="6.png" format="PNG" contentwidth="800px" />
					</imageobject>
				</mediaobject>
			</screenshot>
		</figure>
      <para>You have now created a data adapter for an XML on the web identified by an URL. Now you have the possibility to insert an
      XPath query as seen with the local XML. The RSS of the BBC contains all the the news into the tag &quot;item&quot;, inside
      the tag &quot;Channel&quot;. So expanding the &quot;Channel&quot; tag and double clicking on &quot;Item&quot; will generate
      the following XPath query: /rss/channel/item. After that hit &quot;Finish&quot; to retrieve the fields.</para>
        		<figure>
			<title>Select the Node</title>
			<screenshot>
				<mediaobject>
					<imageobject>
						<imagedata fileref="7.png" format="PNG" contentwidth="800px" />
					</imageobject>
				</mediaobject>
			</screenshot>
		</figure>
      <para>Remember that double clicking on an element &quot;Item&quot; dosen&#39;t mean to select that precise element, but all the
      elements with the tag &quot;Item&quot; at the same level of the clicked one. From the field list select (by double clicking)
      the title, description and pubDate, then hit &quot;Next&quot;. Even this time we don&#39;t need groups so hit
      &quot;Next&quot; and then &quot;Finish&quot;. Now you have a report with the fields already placed, but the description is
      not in a good position considering that it has to contain more text. So enlarge the band &quot;Detail&quot; and move the
      description under the title and enlarge the field description to fill the band. You should obtain something like this:</para>
        		<figure>
			<title>Resize the bands for the new elements</title>
			<screenshot>
				<mediaobject>
					<imageobject>
						<imagedata fileref="8.png" format="PNG" contentwidth="800px" />
					</imageobject>
				</mediaobject>
			</screenshot>
		</figure>
      <para>Switch to the preview tab to compile the report and you should see a result like this:</para>
        		<figure>
			<title>Compile the Report</title>
			<screenshot>
				<mediaobject>
					<imageobject>
						<imagedata fileref="9.png" format="PNG" contentwidth="800px" />
					</imageobject>
				</mediaobject>
			</screenshot>
		</figure>
      <para>When a remote XML is request it is possible to specify some parameters, open the &quot;Dataset &amp; Query&quot; dialog
      (select the report from the outline view, then from the properties tab hit the button &quot;Edit query, filter and sort
      options&quot;) you can see that as query language you are using XPath2. The XPath2 query executer is able to download the XML
      file from a remote url that we set when we have defined the data source, but the url can also be specified using the
      parameters. And optionally GET and POST parameters can be also specified as parameters for the report from the
      &quot;Parameters&quot; tab inside the &quot;Dataset &amp; Query&quot; dialog. When the report is executed inside an
      application, the URL can be set dinamically with a parameter XML_URL. Other parameters that can be set include: XML_USERNAME
      and XML_PASSWORD for http authentication and XML_DATE_PATTERN and XML_NUMBER_PATTERN to set the pattern that convert dates
      and numbers from text. POST and GET parameters can be specified creating parameters with the prefix XML_POST_ and XML_GET_.
      For example, to pass a GET parameter of name id, the parameter must be called XML_GET_id. This approach is very flexible and
      can be used to get data from a web application like a PHP script that can create the XML data based on a set on input
      parameters passed from the report.</para>
     	</section>
</section>