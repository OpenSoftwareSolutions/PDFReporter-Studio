#-------------------------------------------------------------------------------
# Copyright (C) 2005 - 2014 TIBCO Software Inc. All rights reserved.
# http://www.jaspersoft.com.
# 
# Unless you have purchased  a commercial license agreement from Jaspersoft,
# the following license terms  apply:
# 
# This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#-------------------------------------------------------------------------------
1_1_2=1_1_2
common_add=&Add
common_backcolor=Backcolor
common_blank_when_null=Vuoto quando è NULL
common_bold=Bold
common_browse=Browse
common_class=Class
common_fill=Fill
common_font=Font
common_font_name=Font Name
common_font_size=Font Size
common_forecolor=Forecolor
common_height=Height
common_horizontal_alignment=Horizontal Alignment
common_italic=Italic
common_left=Left
common_line_box=Line Box
common_line_color=Line color
common_line_pen=Line Pen
common_line_spacing=Line Spacing
common_line_style=Line style
common_mode=Mode
common_opaque=Transparency
common_linebox_padding=Box Padding
common_parent_style= Style
common_pen_color=Pen Color
common_pen_style=Pen Style
common_pen_width=Pen Width
common_radius=Radius
common_record_delimiter=Record Delimiter
common_rectangle=Rectangle
common_size=Size
common_text=Text
common_top=Top
common_pattern=Pattern
common_horizontalalignment=Horizontal alignment
common_verticalalignment=Vertical alignment
common_linepen_linestyle=Border Line Style
common_linepen_linecolor=Border Line Color
common_linepen_linewith=Border Line Width
common_linebox_linepen_top_linecolor=Top Border Line Color
common_linebox_linepen_top_linestyle=Top Border Line Style
common_linebox_linepen_top_linewidth=Top Border Line Width
common_linebox_linepen_left_linestyle=Left Border Line Style
common_linebox_linepen_left_linecolor=Left Border Line Color
common_linebox_linepen_left_linewidth=Left Border Line Width
common_linebox_linepen_right_linestyle=Right Border Line Style
common_linebox_linepen_right_linecolor=Right Border Line Color
common_linebox_linepen_right_linewidth=Right Border Line Width
common_linebox_linepen_bottom_linestyle=Bottom Border Line Style
common_linebox_linepen_bottom_linecolor=Bottom Border Line Color
common_linebox_linepen_bottom_linewidth=Bottom Border Line Width
common_linebox_linepen_linestyle=Box Line Style
common_linebox_linepen_linecolor=Box Line Color
common_linebox_linepen_linewidth=Box Line Width
common_linebox_rightpadding=Right Padding
common_linebox_leftpadding=Left Padding
common_linebox_toppadding=Top Padding
common_linebox_bottompadding=Bottom Padding
common_linepen_linewidth=Border Width
common_linepen_top_linewidth=Top Border Width
common_linepen_bottom_linewidth=Bottom Border Width
common_linepen_left_linewidth=Left Border Width
common_linepen_right_linewidth=Right Border Width
common_fontname=Font Name
common_isprintrepeatedvalues=Print Repeated Values
common_positiontype=Position Type
common_fontsize=Font Size
common_isremovelinewhenblank=Remove Line When Blank
common_stretchtype=Stretch Type
common_isprintinfirstwholeband=Print in First Whole Band
common_isprintwhendetailoverflows=Print When Detail Overflows
common_boolean_false=False
common_boolean_true=True
common_pdffontname=PDF Font Name
common_pdfencoding=PDF Encoding
common_rotation=Rotation
common_markup=Markup
common_underline=Underline
common_scaleimage=Scale Image
common_strikethrough=Strike Through
common_pdfembedded=PDF Embedded
common_blankwhennull=Blank When NULL
common_paragraph_linespacing=Line Spacing
common_isitalic=Italic
common_isstrikethrough=Strike Through
common_isunderline=Underline
common_isbold=Bold
common_isitalic=Italic
common_ispdfembedded=PDF Embedded
linespacing_nullenum=<INHERITED>
linespacing_single=Single
linespacing_1_1_2=1_1_2
linespacing_double=Double
linespacing_atleast=At Least
linespacing_fixed=Fixed
linespacing_proportional=Proportional
linestyle_solid=Solid
linestyle_dashed=Dashed
linestyle_dotted=Dotted
linestyle_double=Double
allsectionsnodetail=All Sections No Detail
ascending=Ascending
auto=Auto
average=Average
background=Background
bandgroupfooter=Band Group Footer
bandgroupheader=Band Group Header
band=Band
blankpage=Blank Page
blank=Blank
bottomup=Bottom Up
bottom=Bottom
break=Break
categoryseries=Category Series
center=Center
chartcategorydataset=ChartCategoryDataset
chart=Chart
clip=Clip
collateatbottom=Collate at Bottom
columnfooter=Column Footer
columnheader=Column Header
column=Column
count=Count
crosstab=Crosstab
csvdatasources=CSV Data sources
custom=Custom
dashed=Dashed
dataset=Dataset
datasources=Data sources
descending=Descending
distinctcount=Distinct Count
dotted=Dotted
double=Double
elementgroup=Element Group
ellipse=Ellipse
emptydatasources=Empty Data sources
empty=Empty
end=End
error=Error
exceldatasources=Excel Data sources
field=Field
fillframe=Fill Frame
first=First
fixrelativetobottom=Fix Relative To Bottom
fixrelativetotop=Fix Relative To Top
float=Float
forceatbottom=Force at Bottom
frame=Frame
genericelement=GenericElement
group=Group
highest=Highest
horizontal=Horizontal
html=HTML
icon=Icon
image=Image
immediate=Immediate
jdbcdatasources=JDBC Data sources
justified=Justified
key=Key
landscape=Landscape
lastpagefooter=Last Page Footer
left=Left
line=Line
list=List
localanchor=Local Anchor
localpage=Local Page
lowest=Lowest
ltr=Left to Right
middle=Middle
nodatasection=No Data Section
nodata=No Data
none=None
nopages=No Pages
normal=Normal
nostretch=No Stretch
nothing=No Calculation Function
now=Now
null=Null
opaque=Opaque
pagefooter=Page Footer
pageheader=Page Header
page=Page
parametersystem=ParameterSystem
parameter=Parameter
portrait=Portrait
prevent=Prevent
realheight=Real Height
realsize=Real Size
rectangle=Rectangle
reference=Reference
relativetobandheight=Relative To Band Height
relativetotallestobject=Relative To Tallest Object
remoteanchor=Remote Anchor
remotepage=Remote Page
report=Report
retainshape=Retain Shape
right=Right
rtl=Right to Left
scriptlets=Scriptlets
scriptlet=Scriptlet
single=Single
solid=Solid
sortfields=Sort Fields
sortfield=SortField
stackatbottom=Stack to Bottom
standarddeviation=Standard Deviation
start=Start
statictext=StaticText
stretch=Stretch
styles=Styles
style=Style
subreport=Subreport
summary=Summary
sum=Sum
system=System
table=Table
textfield=TextField
title=Title
topdown=Top Down
top=Top
transparent=Transparent
upsidedown=UpsideDown
variablesystem=VariableSystem
variables=Variables
variable=Variable
variance=Variance
vertical=Vertical
xmldatasources=XML Datasources
report_max_count=Maximum Number Of Records
is_ignore_pagination=Ignore Pagination
report_time_zone=Report Time Zone
report_locale=Report Locale
detail=Detail
all_types=All
format_a4=Format A4
format_landscape=Format Landscape
normal=Print Ready Reports
tabular=Web Interactive Reports
#help text for the properties selector
net.sf.jasperreports.export.xls.freeze.column.edge=Property that indicates the vertical edge of the freeze pane, relative to the<br>current cell. If set, it overrides the PROPERTY_FREEZE_COLUMN value.<br>Allowed values are: Left and Right.
net.sf.jasperreports.export.xls.freeze.row.edge=Property that indicates the horizontal edge of the freeze pane, relative to the<br>current cell. If set, it overrides the PROPERTY_FREEZE_ROW value.<br> Allowed values are: Top and Bottom.
net.sf.jasperreports.export.xls.auto.filter=This element-level property is used to indicate the boundaries of the autofilter data range in the current sheet. Allowed values are: <ul> <li><code>Start</code> - The current cell will be marked as autofilter heading cell, and column data below/to the right of this cell can be considered as part of the autofilter data range. The starting point of the autofilter data range will be the next cell below the current cell (ie if the current cell reference is B4, the autofilter range will start with the "B5" cell reference: "B5:M20"). <br/> If multiple autofilter <code>Start</code> values are found in the same sheet, only the last one will be considered. If the <code>Start</code> value is present but no <code>End</code> value is found in the sheet, then only the current column will be considered for the data range. <br/> If the autofilter <code>Start</code> value is set on the same row as the autofilter <code>End</code> value, the data range will include all data below this heading row, placed between the start column and the end column.</li> <li><code>End</code> - The current cell will be marked as autofilter ending cell, and column data in this cell and above/to the left can be considered as part of the autofilter data range. The ending cell in the data range is the current cell reference (ie if the current cell reference is M20, the autofilter range will end in "M20": "B5:M20"). The heading cell for the current column will be placed in the same column on the row containing the autofilter <code>Start</code> value. <br/> <b>Caution:</b> If no autofilter <code>Start</code> value is found in the sheet, the autofilter <code>End</code> value will be considered as <code>Start</code> value instead. <br/> If multiple autofilter <code>End</code> values are found in the same sheet, only the last one will be considered. <br/> If the autofilter <code>Start</code> value is set on the same row as the autofilter <code>End</code> value, the data range will include all data below this heading row, placed between the start column and the end column.</li> </ul><br>Default: N/A
net.sf.jasperreports.export.xls.column.name=Represents the name for the column that should appear in the XLS export. It must be one of the values in <api href="net/sf/jasperreports/engine/export/JRXlsAbstractMetadataExporterParameter.html#PROPERTY_COLUMN_NAMES_PREFIX">PROPERTY_COLUMN_NAMES_PREFIX</api>, if provided.<br>Default: N/A
net.sf.jasperreports.export.xls.column.width=Element-level property used to adjust the column width to values suitable for Excel output, taking into account that column widths are measured in Excel in Normal style default character width units. The pixel-to-character width translation depends on the default normal style character width, so it cannot be always accurately fitted. In this case, one can adjust the current column width by setting this property with an integer value measured in pixels. The JR engine will perform the pixel-to-character width mapping using this value instead of the element's <code>width</code> attribute. <br/> If defined, this property will override the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporter.html#PROPERTY_COLUMN_WIDTH_RATIO">PROPERTY_COLUMN_WIDTH_RATIO</api> value for the current column<br>Default: N/A
net.sf.jasperreports.export.xls.data=Property that specifies which value to associate with <api href="net/sf/jasperreports/engine/export/JRXlsAbstractMetadataExporterParameter.html#PROPERTY_COLUMN_NAME">PROPERTY_COLUMN_NAME</api>.<br/> By default this value is represented by the text value of the report element this property is assigned to.<br>Default: N/A
net.sf.jasperreports.export.xls.break.before.row=Custom element property specifying if a sheet will break before the row displaying that element. It is very useful especially when displaying each report's group on a separate sheet is intended.<br>Default: false
net.sf.jasperreports.export.xls.break.after.row=Custom element property specifying if a sheet will break after the row displaying that element. It is very useful especially when displaying each report's group on a separate sheet is intended.<br>Default: false
net.sf.jasperreports.export.xls.repeat.value=Property that specifies whether the value associated with <api href="net/sf/jasperreports/engine/export/JRXlsAbstractMetadataExporterParameter.html#PROPERTY_COLUMN_NAME">PROPERTY_COLUMN_NAME</api> should be repeated or not when it is missing.<br>Default: false
net.sf.jasperreports.export.xls.sheet.name=Property used to set the name of the sheet containing a given element. Its value overrides the report-level settings for the sheet name. <br/> If several elements in the sheet contain this property, the engine will consider the value of the last exported element's property.<br>Default: N/A
net.sf.jasperreports.export.xls.write.header=Property that specifies whether the export header (the column names) should be written or not.<br>Default: false
net.sf.jasperreports.export.xls.collapse.row.span=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#IS_COLLAPSE_ROW_SPAN">IS_COLLAPSE_ROW_SPAN</api> export flag. Specifies whether row spans should be collapsed and merging cells across rows should be inhibited.<br>Default: false
net.sf.jasperreports.export.xls.create.custom.palette=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JExcelApiExporterParameter.html#CREATE_CUSTOM_PALETTE">CREATE_CUSTOM_PALETTE</api> export flag. This property is by default not set (<code>false</code>).<br>Default: false
net.sf.jasperreports.export.xls.detect.cell.type=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#IS_DETECT_CELL_TYPE">IS_DETECT_CELL_TYPE</api> export flag. Specifies whether the exporter should take into consideration the type of the original text field expressions and set the cell types and values accordingly.<br>Default: false
net.sf.jasperreports.export.xls.fit.height=Property used at print time to indicate the number of pages height to fit the sheet in.<br>Default: N/A
net.sf.jasperreports.export.xls.fit.width=Property used at print time to indicate the number of pages width to fit the sheet in.<br>Default: N/A
net.sf.jasperreports.export.xls.font.size.fix.enabled=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#IS_FONT_SIZE_FIX_ENABLED">IS_FONT_SIZE_FIX_ENABLED</api> export flag. Specifies whether the font size should be decreased so that texts fit into the specified cell height.<br>Default: false
net.sf.jasperreports.export.xls.ignore.cell.background=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#IS_IGNORE_CELL_BACKGROUND">IS_IGNORE_CELL_BACKGROUND</api> export flag. Specifies whether cell background color should be ignored.<br>Default: false
net.sf.jasperreports.export.xls.ignore.cell.border=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#IS_IGNORE_CELL_BORDER">IS_IGNORE_CELL_BORDER</api> export flag. Specifies whether cell borders should be ignored.<br>Default: false
net.sf.jasperreports.export.xls.ignore.graphics=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#IS_IGNORE_GRAPHICS">IS_IGNORE_GRAPHICS</api> export flag. Specifies whether graphic elements should be ignored and only text elements be exported.<br>Default: false
net.sf.jasperreports.export.xls.image.border.fix.enabled=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#IS_IMAGE_BORDER_FIX_ENABLED">IS_IMAGE_BORDER_FIX_ENABLED</api> export parameter.<br>Default: false
net.sf.jasperreports.export.xls.max.rows.per.sheet=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#MAXIMUM_ROWS_PER_SHEET">MAXIMUM_ROWS_PER_SHEET</api> export parameter. Specifies the maximum number of rows allowed to be exported to the same sheet. Negative values or zero means that no limit has been set.<br>Default: 0
net.sf.jasperreports.export.xls.one.page.per.sheet=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#IS_ONE_PAGE_PER_SHEET">IS_ONE_PAGE_PER_SHEET</api> export flag. Specifies whether each report page should be written in a different XLS sheet.<br>Default: false
net.sf.jasperreports.export.xls.remove.empty.space.between.columns=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#IS_REMOVE_EMPTY_SPACE_BETWEEN_COLUMNS">IS_REMOVE_EMPTY_SPACE_BETWEEN_COLUMNS</api> export flag. Specifies whether the empty spacer columns should be removed or not.<br>Default: false
net.sf.jasperreports.export.xls.remove.empty.space.between.rows=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#IS_REMOVE_EMPTY_SPACE_BETWEEN_ROWS">IS_REMOVE_EMPTY_SPACE_BETWEEN_ROWS</api> export flag. Specifies whether the empty spacer rows should be removed or not.<br>Default: false
net.sf.jasperreports.export.xls.white.page.background=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#IS_WHITE_PAGE_BACKGROUND">IS_WHITE_PAGE_BACKGROUND</api> export flag. Specifies whether the page background should be white or the default XLS background color.<br>Default: true
net.sf.jasperreports.export.xls.freeze.column=Indicates the name of the first unlocked column in document's sheets. All columns to the left of this one will be 'frozen'. Allowed values are letters or letter combinations representing valid column names in Excel, such as A, B, AB, AC, etc. The property should be used when all sheets in the document have the same freeze column name.<br/> The property is available for: <ul> <li><api href="net/sf/jasperreports/engine/export/JRXlsExporter.html">JRXlsExporter</api></li> <li><api href="net/sf/jasperreports/engine/export/JExcelApiExporter.html">JExcelApiExporter</api></li> <li><api href="net/sf/jasperreports/engine/export/JExcelApiMetadataExporter.html">JExcelApiMetadataExporter</api></li> <li><api href="net/sf/jasperreports/engine/export/ooxml/JRXlsxExporter.html">JRXlsxExporter</api></li> </ul><br>Default: N/A
net.sf.jasperreports.export.xls.freeze.row=Specifies the index of the first unlocked row in document's sheets. All rows above this will be 'frozen'. Allowed values are represented by positive integers in the 1..65536 range. Negative values are not considered. The property should be used when all sheets in the document have the same freeze row index.<br/> The property is available for: <ul> <li><api href="net/sf/jasperreports/engine/export/JRXlsExporter.html">JRXlsExporter</api></li> <li><api href="net/sf/jasperreports/engine/export/JExcelApiExporter.html">JExcelApiExporter</api></li> <li><api href="net/sf/jasperreports/engine/export/JExcelApiMetadataExporter.html">JExcelApiMetadataExporter</api></li> <li><api href="net/sf/jasperreports/engine/export/ooxml/JRXlsxExporter.html">JRXlsxExporter</api></li> </ul><br>Default: N/A
net.sf.jasperreports.export.xls.password=Property whose value is used as default state of the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporterParameter.html#PASSWORD">PASSWORD</api> export parameter. <br/> Contains a String value representing the password in case of password protected sheets in documents. <br/> This property is by default not set (<code>null</code>).<br>Default: N/A
net.sf.jasperreports.export.xls.sheet.direction=This property indicates if the sheet is left-to-right or right-to-left oriented. Possible values are: <ul>  <li><code>LTR</code></li>  <li><code>RTL</code></li> </ul><br>Default: LTR
net.sf.jasperreports.export.xls.sheet.footer.center=Custom property storing the text content of the sheet footer's center.<br>Default: N/A
net.sf.jasperreports.export.xls.sheet.footer.left=Custom property storing the text content of the left side of the sheet footer.<br>Default: N/A
net.sf.jasperreports.export.xls.sheet.footer.right=Custom property storing the text content of the right side of the sheet footer.<br>Default: N/A
net.sf.jasperreports.export.xls.sheet.header.center=Custom property storing the text content of the sheet header's center.<br>Default: N/A
net.sf.jasperreports.export.xls.sheet.header.left=Custom property storing the text content of the left side of the sheet header.<br>Default: N/A
net.sf.jasperreports.export.xls.sheet.header.right=Custom property storing the text content of the right side of the sheet header.<br>Default: N/A
net.sf.jasperreports.export.xls.column.width.ratio=Property used to adjust all column widths in a document or sheet with the same width ratio, in order to get column width values suitable for Excel output. Usually column widths are measured by Excel in Normal style default character width units, while the JR engine uses pixels as default size units. When exporting the report to the Excel output format, the pixel-to-character width translation depends on the normal style default character width provided by the Excel instance, so it cannot be always accurately fitted. In this case, one can alter the generated column widths by setting this property with a float value representing the adjustment ratio. The property can be set: <ul> <li>globally - then all the columns in all documents exported to the Excel output format will be adjusted with the same width ratio</li> <li>at report level - then all the columns in the document will be adjusted with the same width ratio</li> <li>at element level - then all the columns in the current sheet will be adjusted with the same width ratio</li> </ul> Global settings are overriden by report level settings and report level settings are overriden by element level settings. If present, a <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporter.html#PROPERTY_COLUMN_WIDTH">PROPERTY_COLUMN_WIDTH</api> property will override the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporter.html#PROPERTY_COLUMN_WIDTH_RATIO">PROPERTY_COLUMN_WIDTH_RATIO</api> value for that column only.<br>Default: N/A
net.sf.jasperreports.export.xls.cell.hidden=Property that specifies if the cell content is hidden or exposed in the formula bar of a protected sheet. By default the property is not set (<code>false</code>), and the cell content is not hidden. This property has effect only if the enclosing sheet is protected.<br>Default: false
net.sf.jasperreports.export.xls.cell.locked=Property that specifies if the cell content is locked (read-only) within a protected sheet. By default the property is considered (<code>true</code>), but it only has effect if the enclosing sheet is protected.<br>Default: true
net.sf.jasperreports.export.xls.wrap.text=Custom element property specifying if text wrapping is allowed in a given cell. If set to <code>false</code>, text wrapping is forbidden, otherwise it is allowed.<br>Default: true
net.sf.jasperreports.export.xls.column.names=Properties having this prefix contain comma-separated column names. <br/> The order of the columns is important and for accurate results they should be in the same order as the original columns.<br>Default: N/A
net.sf.jasperreports.export.xls.sheet.names.{arbitrary_name}=A set of report custom properties (exporter hints) added in order to hold user defined sheet names. This is very useful when indicating sheet names in the jrxml template is required. <br/> These properties should start with the <code>net.sf.jasperreports.export.xls.sheet.names.</code> prefix, and should end with an arbitrary suffix. Any of them can hold one or many sheet names, separated by the slash ("/") separator. Values are collected in the same order as they are enumerated in the jrxml template, so one have to be careful with that order when editing a jrxml. The ending suffix is not important, but the order is very. <br/> For instance, if a given report has 3 resulting sheets, there are multiple possibilities to define the sheet names within the jrxml template: <br/> <br/> <ol> <li> To have a single property for each sheet name: <br/> <br/> <code> &lt;property name "net.sf.jasperreports.export.xls.sheet.names.sheet1" value="First sheet" /&gt; <br/> &lt;property name="net.sf.jasperreports.export.xls.sheet.names.second.sheet.name" value="Second sheet" /&gt; <br/> &lt;property name="net.sf.jasperreports.export.xls.sheet.names.3" value="Third sheet" /&gt;</code> <br/> <br/> Then, the 3 resulting sheets will be named as follows: <br/> <br/> First sheet <br/> Second sheet <br/> Third sheet <br/> <br/> </li> <li> To have a single property containing all sheet names, separated by the "/" separator: <br/> <br/> <code> &lt;property name="net.sf.jasperreports.export.xls.sheet.names.all" value="First sheet/Second sheet/Third sheet" /&gt;</code> <br/> <br/> Then, the 3 resulting sheets will be named as follows: <br/> <br/> First sheet <br/> Second sheet <br/> Third sheet <br/> The order is very important, as shown above. <br/> <br/> </li> <li> To have any combination of 1) and 2): <br/> <br/> <code> &lt;property name="net.sf.jasperreports.export.xls.sheet.names.first" value="First sheet" /&gt; <br/> &lt;property name="net.sf.jasperreports.export.xls.sheet.names.others" value="Second sheet/Third sheet" /&gt;</code> <br/> <br/> Then, the 3 resulting sheets will be named as follows: <br/> <br/> First sheet <br/> Second sheet <br/> Third sheet </li> </ol> <br/> Finally, if the user sets less sheet names (let's say x) than the number of sheets, the exporter will use the custom user sheet names for the first x sheets in the document, and the remaining sheets will be named by default as "Page y", where y is the current page number. <br/> These properties are by default not set.<br>Default: N/A
net.sf.jasperreports.export.xls.freeze.column.edge=Property that indicates the vertical edge of the freeze pane, relative to the current cell. If set, it overrides the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporter.html#PROPERTY_FREEZE_COLUMN">PROPERTY_FREEZE_COLUMN</api> value. <br/> Allowed values are: <ul> <li> <code>Left</code> - the current column is the first unlocked column in the sheet. All columns to the left are 'frozen'. </li> <li> <code>Right</code> - the current column is the last 'frozen' column in the sheet. All columns to the right are unlocked. </li> </ul> The property is available for: <ul> <li><api href="net/sf/jasperreports/engine/export/JRXlsExporter.html">JRXlsExporter</api></li> <li><api href="net/sf/jasperreports/engine/export/JExcelApiExporter.html">JExcelApiExporter</api></li> <li><api href="net/sf/jasperreports/engine/export/JExcelApiMetadataExporter.html">JExcelApiMetadataExporter</api></li> </ul><br>Default: N/A
net.sf.jasperreports.export.xls.freeze.row.edge=Property that indicates the horizontal edge of the freeze pane, relative to the current cell. If set, it overrides the <api href="net/sf/jasperreports/engine/export/JRXlsAbstractExporter.html#PROPERTY_FREEZE_ROW">PROPERTY_FREEZE_ROW</api> value. <br/> Allowed values are: <ul> <li> <code>Top</code> - the current row is the first unlocked row in the sheet. All rows above are 'frozen'. </li> <li> <code>Bottom</code> - the current row is the last 'frozen' row in the sheet. All rows below are unlocked. </li> </ul> The property is available for: <ul> <li><api href="net/sf/jasperreports/engine/export/JRXlsExporter.html">JRXlsExporter</api></li> <li><api href="net/sf/jasperreports/engine/export/JExcelApiExporter.html">JExcelApiExporter</api></li> <li><api href="net/sf/jasperreports/engine/export/JExcelApiMetadataExporter.html">JExcelApiMetadataExporter</api></li> </ul><br>Default: N/A
net.sf.jasperreports.export.xls.formula=Property that stores the formula which has to be applied to a given cell in an Excel sheet.<br>Default: N/A
net.sf.jasperreports.export.xls.pattern=Property whose value is an Excel compatible pattern, to be used as replacement for the text field pattern when exporting to XLS formats.<br>Default: N/A
net.sf.jasperreports.export.xls.row.outline.level.{arbitrary_level}=Property prefix used to indicate the current outline row level, and when necessary, the ending row of the current outline row \
group with the given level. The suffix of these properties is associated with the outline level, while the property value indicates \
if the current row group should continue or should end. The most recommended practice is to use the outline level itself as property \
suffix, although this is not mandatory. The suffix may take any other string value, but one has to keep in mind that suffixes are \
used as sorted row levels descriptors. For instance, because "aaa" &lt; "bbb", the outline level associated with the "aaa" suffix \
will be smaller than the level associated with the "bbb" suffix. A completely intuitive representation of the row levels uses the row \level as property suffix.<br/>\
In such a case, the <code>net.sf.jasperreports.export.xls.outline.level.2</code> property means that its value is correlated with \
the outline level 2, so the current row belongs to a level 2 row group. Based on Office Open XML specs, allowed values for outline \
levels are positive integers from 1 to 7. <br/>\
The value of this property could be any expression (including <code>null</code>). When such a property occurrence is met, the suffix \
indicates the outline level for that row. If multiple properties with the same prefix are defined for the same row, the deepest \
outline level is considered for that row. To end an outline row group one has to set the related outline level property with the \
<code>End</code> value. This is a special property value instructing the JR engine that the current row group of that level ends \
on the current row.
net.sf.jasperreports.virtual.page.element.size=Property that determines how many print elements will make up a virtual page handled as a unit by the virtualizer.<p>For most paginated reports, a virtual page corresponds to a report page. But for non-paginated reports and for reports having very large pages, a report page is broken into several virtual pages which are handled individually by the virtualizer. </p><p>This property provides the size of a virtual page in print elements. Note that virtual page sizes will actually vary around the configured size since there are cases when fewer elements remain on a report page and cases when the configured size is exceeded due to print frames being included at the end of virtual page. </p><p>If set to 0 or negative, report pages will not be broken into several virtual pages.</p>Default: 2000.
net.sf.jasperreports.export.flash.element.allow.script.access=Property that determines the value of the allowScriptAccess parameter for Flash elements.<br>Default: sameDomain
jrpropertydialog.list.prop1=Applied to text elements.<br>Setting this property to true, the text contents is truncated after the last character that fits the element area.<br>When the text element is rendered on multiple lines, line breaks still occur at word boundaries.<br>It defaults to false.
jrpropertydialog.list.prop2=Applied to text elements.<br>Use this property to define a suffix to append to the text contents when it is truncated, after the last character that fits the element area.<br>When the text element is rendered on multiple lines, line breaks still occur at word boundaries.\nIt defaults to the empty string.
jrpropertydialog.list.prop3=Applied to text elements.<br>This property is used to preserve the entire content of a text element  so that it's used in data-centric exporters.<br>It defaults to false.
jrpropertydialog.list.prop4=\nApplied to text elements.<br>This property can be set to use custom text measurer implementation for all or specific text elements.<br>It defaults to net.sf.jasperreports.engine.fill.TextMeasurerFactory.
jrpropertydialog.list.prop5=Used by the Graphics2D exporter<br>
jrpropertydialog.list.defaulttrue=Default value: true
jrpropertydialog.list.html.id=Used by the HTML exporter<br>
jrpropertydialog.list.html.id.value=This expression allows to specify the ID attribute for elements when exported to HTML and XHTML/CSS format<br>
jrpropertydialog.list.prop6=Used by the HTML exporter<br>
jrpropertydialog.list.defaultfalse=Default value: false
jrpropertydialog.list.defaultpx=Default value: px
jrpropertydialog.list.prop7=Used by the PDF exporter<br>
jrpropertydialog.list.prop8=Used by the XLS exporter<br>
jrpropertydialog.list.prop9=Used by the XML exporter<br>
jrpropertydialog.list.prop10=Used by the CSV exporter<br>
jrpropertydialog.list.prop11=Set the global theme to render charts<br>
jrpropertydialog.list.prop12=Turn ON/OFF the creation of structural tags inside the generated PDF files<br>
jrpropertydialog.list.prop13=Set the language of the resulting PDF file<br>
jrpropertydialog.list.prop14=Mark a text field as a level 1 heading.<br>\
Value "full" means that a full &lt;H1&gt; tag will be embedded into the PDF wrapping the current text element.<br>\
In case two or more text fields are making up a single level 1 heading, there are two ways to mark the heading:<br>\
The text elements making up the heading should be placed inside a frame and then the frame should be marked with<br>\
the following custom property:<br>\
&lt;property name="net.sf.jasperreports.export.pdf.tag.h1" value="full"/&gt;<br>\
The first element of the heading (respective to the Z-Order, or the order in which<br>\ the elements appear in JRXML)<br>\
is tagged with:<br>\
&lt;property name="net.sf.jasperreports.export.pdf.tag.h1" value="start"/&gt;<br>\
and the last element from the heading (respective to the same order) is marked with<br>\
&lt;property name="net.sf.jasperreports.export.pdf.tag.h1" value="end"/&gt;<br>
jrpropertydialog.list.prop15=Mark a text field as a level 2 heading (see description of property net.sf.jasperreports.export.pdf.tag.h1)<br>
jrpropertydialog.list.prop16=Mark a text field as a level 3 heading (see description of property net.sf.jasperreports.export.pdf.tag.h1)<br>
jrpropertydialog.list.prop17=Mark a table.<br>\
Tables are made of column headers, row headers, and a data section.<br>\
When marking a table, the user has to indicate where the table starts and where the table ends,<br>\
within the report template and there are two ways to achieve this:<br>\
If the entire table is placed in a container such as a frame element, marking the whole table<br>\
requires only marking the parent frame with the following custom element property:<br>\
&lt;property name="net.sf.jasperreports.export.pdf.tag.table" value="full"/&gt;<br>\
Most of the times, tables cannot be isolated into a frame (unless they are subreports), because<br>\
they span across different report sections/bands. In such cases marking a table means marking the<br>\
first element and the last element making up the table structure in JRXML.<br>\
The first element of the table (probably the first element in the table header) should be marked<br>\
with the following custom property:<br>\
&lt;property name="net.sf.jasperreports.export.pdf.tag.table" value="start"/&gt;<br>\
The last element of the table should be marked with:<br>\
&lt;property name="net.sf.jasperreports.export.pdf.tag.table" value="end"/&gt;<br>
jrpropertydialog.list.prop22=Tables are made of rows, and each row has to be precisely delimited<br>\
within the table structure. This includes the column header rows at the top of the table. Similar to<br>\
the headings and table marking, a table row can be identified in two ways:<br>\
If the entire content that makes up the row is isolated within a frame, the frame can be marked with<br>\
the following custom property:<br>\
&lt;property name="net.sf.jasperreports.export.pdf.tag.tr" value="full"/&gt;<br>\
If the content of the row is not grouped in container frame, then its first and last elements (respective<br>\
to the Z-order or the order in which they appear in JRXML) have to be marked with the following custom<br>\
properties:<br>\
&lt;property name="net.sf.jasperreports.export.pdf.tag.tr" value="start"/&gt; for the first element and<br>\
&lt;property name="net.sf.jasperreports.export.pdf.tag.tr" value="end"/&gt; for the last element<br>
jrpropertydialog.list.prop18=Mark a table header. See the description for marking an entire table.
jrpropertydialog.list.prop19=Mark a table cell. See the description for marking an entire table.
jrpropertydialog.list.prop20=Set the column span of the cell identified by this element.
jrpropertydialog.list.prop21=Set the row span of the cell identified by this element.
jrpropertydialog.list.prop18=Mark a table header. See the description for marking an entire table.
jrpropertydialog.list.prop19=Mark a table cell. See the description for marking an entire table.
jrpropertydialog.list.prop20=Set the column span of the cell identified by this element.
jrpropertydialog.list.prop21=Set the row span of the cell identified by this element.
jrpropertydialog.list.default=Default value: ,
jrpropertydialog.list.default1=Default value: \\n (New line)
jrpropertydialog.list.defaultnull=Default value: null
